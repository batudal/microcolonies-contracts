{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
    "txHash": "0x7d712150f406b217cacdab788364fe0b3770b5e90c94e14fc04ff08d94b69649"
  },
  "proxies": [
    {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0x6a8e42d43a610aa0cc90876d87cdda56390b7966b1f51003df19c9898f76ab96",
      "kind": "transparent"
    },
    {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0xfd1870a67481c32960012b84821ec1db2f6a73fc78e2982102df079fe77b2719",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a5462b6d61fc6b21b793147aec7b17ab298752816489f3b4a8c7cd8326781863": {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0x0a7fd242cc5f157929e14c78a4da1a055157c1434b0dc82256b3d2976ef65bde",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "tournaments",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_contract(Tournament)2379)dyn_storage",
            "contract": "TournamentFactory",
            "src": "contracts/TournamentFactory.sol:9"
          },
          {
            "label": "implementations",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TournamentFactory",
            "src": "contracts/TournamentFactory.sol:10"
          },
          {
            "label": "userTournaments",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "TournamentFactory",
            "src": "contracts/TournamentFactory.sol:11"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_contract(Tournament)2379)dyn_storage": {
            "label": "contract Tournament[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Tournament)2379": {
            "label": "contract Tournament",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
